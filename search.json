[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Biyoinformatik",
    "section": "",
    "text": "Önsöz\nMerhabalar! Lisans üstü seviyede verilen İleri Biyoinformatik dersine hoşgeldiniz!"
  },
  {
    "objectID": "00-setup/01-system.html#windows-işletim-sistemi",
    "href": "00-setup/01-system.html#windows-işletim-sistemi",
    "title": "1  Sistem kurulumu",
    "section": "1.1 Windows işletim sistemi",
    "text": "1.1 Windows işletim sistemi\nUzaktaki sunucuya bağlanmak için Mobaxterm yazılımını kullanabiliriz."
  },
  {
    "objectID": "00-setup/01-system.html#mac-işletim-sistemi",
    "href": "00-setup/01-system.html#mac-işletim-sistemi",
    "title": "1  Sistem kurulumu",
    "section": "1.2 Mac işletim sistemi",
    "text": "1.2 Mac işletim sistemi\nMac sistemler üzerine kullanacağımız bütün biyoinformatik araçları kurma imkanımız bulunmaktadır. Bunun için Mac tuşu ile boşluk tuşuna basıp Spotlight ekranını açarak (Şekil 1.1), terminal yazınız ve açılan penceyere aşağıdaki kodu yazınız.\nxcode-select --install\n\n\n\nŞekil 1.1: Mac üzerinde spotlight ekranı\n\n\nBir süre bekledikten sonra gerekli programlar kurulacaktır. Artık terminal programı üzerinden gerek uzak bilgisayarlarlar ssh bağlantısı, gerekse de kullanılacak biyoinformatik araçların kurulumunu gerçekleştirebilirsiniz."
  },
  {
    "objectID": "00-setup/01-system.html#ubuntu-alt-sistemi-bakımı",
    "href": "00-setup/01-system.html#ubuntu-alt-sistemi-bakımı",
    "title": "1  Sistem kurulumu",
    "section": "1.3 Ubuntu alt sistemi bakımı",
    "text": "1.3 Ubuntu alt sistemi bakımı\nSisteminiz ara ara güncellemelisiniz. Öncelikle kullandığımız paketlerin en güncel versiyonlarını denetleyelim:\nsudo apt update\nDaha sonra sistemi güncelleyelim:\nsudo apt upgrade\n\n1.3.1 Ubuntu sisteminde kullanıcı ismi sorunu\nSorunlardan bir tanesi ön tanımlı kullanıcının root olmasıydı. Kullandığımız sistemler çok kullanıcılı sistemler. Her kullanıcının bazı hakları var. root kullanıcısı ise, en güçlü kullanıcı ve her şeyi yapma yeteneği var.\nO yüzden bu kullanıcı her zaman kullanmıuoruz. Eğer ubuntu alt sistemi root kullanıcısı ile açılıyorsa bunu değiştirmeliyiz.\nÖnce ubuntu ekranını açalım ve yeni bir kullancı eklediğimizden emin olalım:\nsudo adduser KULLANICI\nBu şekilde yeni kullanıcı ekleyelim. Aşağıdaki gibi bir ekran karşımıza çıkacak (Şekil 1.2):\n\n\n\nŞekil 1.2: Ubuntu alt sisteminde kullanıcı ekleme\n\n\nŞifrenizi girin (ancak imleç haraket etmeyecek, endişe etmeyin) ve tekrar girin.\nKullanıcıyı oluşturduktan sonra, Windows’ta arama kısmına gelerek Komut İstemi yazın. bu da aslında Windows’un komut satırı arayüzü. Burada aşağıdaki satırı yazarak, yeni kullanıcınızı ön tanımlı olarak ekleyebilirsiniz.\nubuntu config --default-user KULLANICI"
  },
  {
    "objectID": "00-setup/02-truba.html",
    "href": "00-setup/02-truba.html",
    "title": "2  Truba",
    "section": "",
    "text": "Ders kapsamında TRUBA sunucularını kullanacağız. Bu imkanı bize sundukları için teşekkür ederiz.\nÖncelikle TRUBA internet sitesine giderek sistemi inceleyelim.\nTRUBA kaynaklarına üniversite içerisinden rahatlıkla bağlanabilirsiniz, ancak üniversite dışından bağlanmak için ise bilgisayarınza OpenVPN programını kurmanız gerekmektedir.\nAyrıntılar için Kurulum kılavuzunu inceleyin ve bilgisayarınza uygun olan kılavuz ile OpenVPN kurulumuunu tamamlayınız.\nNormalde uzak bir bilgisyara bağlanma sürecini şöyle özetleyebilirzi. İnternet üzerinde, sizin bilgisyarınız ve uzak bilgisayar arasında şifreli bir tünel (ssh) bağlantısı kurulmaktadır.\n\n\n\n\n\n\n\ng\n\n  \n\nYerel Bilgisayar\n\n Yerel Bilgisayar   \n\nTRUBA\n\n TRUBA   \n\nYerel Bilgisayar->TRUBA\n\n   \n\n\n\n\n\nBu şekilde yapılan bir bağlantıda, TRUBA sistemine doğrudan bir hesap açılmaktadır. Ancak, ULAKBİM üzerinden yapılmayan bağlantılar güvenli olmayabiir. Bağlantınızın güvenliği için OpenVPN tercih ediyoruz.\n\n\n\n\n\n\n\ng\n\n  \n\nYerel Bilgisayar\n\n Yerel Bilgisayar   \n\nOpenVPN\n\n OpenVPN   \n\nYerel Bilgisayar->OpenVPN\n\n    \n\nTRUBA\n\n TRUBA   \n\nOpenVPN->TRUBA"
  },
  {
    "objectID": "00-setup/03-command-line.html#linuxta-dosya-yapısı",
    "href": "00-setup/03-command-line.html#linuxta-dosya-yapısı",
    "title": "3  Komut satırı kullanımı",
    "section": "3.1 Linux’ta dosya yapısı",
    "text": "3.1 Linux’ta dosya yapısı\nGirdiğimiz ekran aslında bizim kullanıcı klasörümüz. Linux işletim sisteminde dosya yapısı kök / işareti ile başlar. Bu işaret aynı zamanda klasörleri birbirinden ayrır.\nBulunduğumuz klasörü elde etmek için pwd (print working directory) komutunu yazalım:\npwd\nBenim ekranımda bu komutun çıktısı şöyle oldu:\n/truba/home/egitim\nhome klasörü, kullanıcıların klasörlerinin bulunduğu konumu işaret etmektedir."
  },
  {
    "objectID": "00-setup/03-command-line.html#klasör-oluşturma",
    "href": "00-setup/03-command-line.html#klasör-oluşturma",
    "title": "3  Komut satırı kullanımı",
    "section": "3.2 Klasör oluşturma",
    "text": "3.2 Klasör oluşturma\nŞimdi komut satırını öğrenmek için gerekli olan dosyaları yükleyeceğimiz klasörü oluşturalum. mkdir komutu klasör oluşturmak için kullanılır. İlk olarak kendi ismimizi kullanarak bir klasör oluşturalım:\nmkdir emrah"
  },
  {
    "objectID": "00-setup/03-command-line.html#klasör-içindekileri-inceleme",
    "href": "00-setup/03-command-line.html#klasör-içindekileri-inceleme",
    "title": "3  Komut satırı kullanımı",
    "section": "3.3 Klasör içindekileri inceleme",
    "text": "3.3 Klasör içindekileri inceleme\nBir klasör içindeki dosyaları listelemek için ls komutunu kullanabiliriz:\nls\nEğer daha ayrıntılı bilgi istersek, ls -l komutunu kullanabiliriz. Bu komut, dosya ve klasörleri listeler\nls -l\nBenim ekranımda şöyle bir görüntü çıktı (Şekil 3.1).\n\n\n\nŞekil 3.1: ls -l komutu çıktısı"
  },
  {
    "objectID": "00-setup/03-command-line.html#klasörler-arasında-gezinti",
    "href": "00-setup/03-command-line.html#klasörler-arasında-gezinti",
    "title": "3  Komut satırı kullanımı",
    "section": "3.4 Klasörler arasında gezinti",
    "text": "3.4 Klasörler arasında gezinti\nBir klasörün içerisine girmek için cd (change directory) komutu kullanılır:\ncd emrah\nŞimdi hangi klasörde olduğumuza bakalım:\npwd"
  },
  {
    "objectID": "00-setup/03-command-line.html#dosya-ve-klasör-kopyalama",
    "href": "00-setup/03-command-line.html#dosya-ve-klasör-kopyalama",
    "title": "3  Komut satırı kullanımı",
    "section": "3.5 Dosya ve klasör kopyalama",
    "text": "3.5 Dosya ve klasör kopyalama\nİlk olarak örnek dosyamızı kopyalayarak işe başlayalım. cp komutu dosya ve klasörleri kopyalamak için kullanılır. Klasörleri kopyalamak istiyorsak -r işaretini eklememiz gerekir.\ncp -r /truba/home/egitim/test .\nBu komut bize, /truba/home/egitim/test klasörünü, . yani bulunduğumuz klasöre kpopyalamamızı sağlamaktadır.\nLinux üzerinde bunun gibi kısayollar bulunmaktadır.\n\n. bulunduğumuz klasör\n~ ev klasörümüz\n\nŞimdi tekrar bulunduğumuz klasör içindekileri listeleyelim:\nls -l\nŞimdi de test klasörüne girelim:\ncd test\nVe içindekileri listeleyelim:\nls -l"
  },
  {
    "objectID": "00-setup/03-command-line.html#dosyalarda-işlem-yapmak",
    "href": "00-setup/03-command-line.html#dosyalarda-işlem-yapmak",
    "title": "3  Komut satırı kullanımı",
    "section": "3.6 Dosyalarda işlem yapmak",
    "text": "3.6 Dosyalarda işlem yapmak\nŞimdi ornek.fasta dosyasının içini inceleyelim. cat komutu bize bir dosyanın içindekileri ekrana yazdırma şansı verir:\ncat ornek.fasta\nDikkat ederseniz hepsini ekrana yazdırdı. Ancak dosyamız çok büyükse bunu yapma şansımız yok. O zaman less komutunu kullanabiliriz:\nless\nless aslında metin dosyalarını incelememizi sağlayan bir komut satırı programı. Bu sayede bir dosyanın içindekilere bakabiliriz. Bu programdan çıkmak için q tuşuna basınız.\nİstersek less programı ile dosyalar içerisinde arama da yapabiliriz. Bunun için ise, öncelikle / karakterine basalım, daha sonra da aramak istediğimiz kelimeyi yazalım. less programı sizin arama yaptığınızı anlayacaktır.\nŞimdi yine ornek.fasta dosyasını açalım ve “ENA” kelimesini arayalım"
  },
  {
    "objectID": "00-setup/03-command-line.html#dosyalarda-arama-yapmak",
    "href": "00-setup/03-command-line.html#dosyalarda-arama-yapmak",
    "title": "3  Komut satırı kullanımı",
    "section": "3.7 Dosyalarda arama yapmak",
    "text": "3.7 Dosyalarda arama yapmak\nİstersek grep komutu ile de bir dosya içerisinde arama yapabiliriz. Ancak bu sefer yaptığımız arama ekrana yazdırılacaktır:\ngrep ENA ornek.fasta"
  },
  {
    "objectID": "00-setup/03-command-line.html#çıktı-yönlendirme",
    "href": "00-setup/03-command-line.html#çıktı-yönlendirme",
    "title": "3  Komut satırı kullanımı",
    "section": "3.8 Çıktı yönlendirme",
    "text": "3.8 Çıktı yönlendirme\nLinux temelli sistemlerin en önemli özelliklerinden bir tanesi de çıktı yönlendirmedir. Yukarıdaki komuta bakmıştık, istersek çıktıyı başka bit dosyaya yönlendirebiliriz. Bunun için > komutunu kullanmalıyız.\ngrep ENA ornek.fasta > arama.txt\nNe yaptık? Önce ornek.fasta dosyasında “ENA” kelimesini aradık, ve çıktıyı başka bir metin dosyasına yönlendirdirdik."
  },
  {
    "objectID": "00-setup/03-command-line.html#boru-pipe",
    "href": "00-setup/03-command-line.html#boru-pipe",
    "title": "3  Komut satırı kullanımı",
    "section": "3.9 Boru (Pipe)",
    "text": "3.9 Boru (Pipe)\nDiğer önemli bir özellik ise, elimizdeki çıktıyı başka bir dosyaya yönlendirmek. Bunun için | karakterini kullanıyoruz.\ngrep ENA ornek.fasta | grep CAA\nYukarıdaki komuta bakarsak, önce “ENA” kelimesini arıyoruyz, sonra çıktıyı başka bir grep komutuna yönlendirip, CAA kelimesini arıyoruyz.\nİstersek o çıktıyı bir dosyaya gönderebiliriz:\ngrep ENA ornek.fasta | grep CAA > arama.txt\nAma dikkat edin! Artık arama.txt dosyasının üzerine yazdık! Eğer bu dosyayı korumak istiyorsanız başka bir dosya ismi vermelisiniz.\n\n\n\n\n\n\nVarolan dosyanın üzerine yazma\n\n\n\nEğer > kullanırsanız, ve varolan bir dosyayı hedef gösterirseniz, o dosyanın üzerine yazmış olursunuz!"
  },
  {
    "objectID": "00-setup/03-command-line.html#metin-dosyaları-oluşturmak",
    "href": "00-setup/03-command-line.html#metin-dosyaları-oluşturmak",
    "title": "3  Komut satırı kullanımı",
    "section": "3.10 Metin dosyaları oluşturmak",
    "text": "3.10 Metin dosyaları oluşturmak\nŞimdi ise metin dosyalarını oluşturma ve kaydetmeye bakalım. Metin tabanlı sistemlerde nano isimli metin editörü, bize metin dosyaları ile çalışma imkanı sağlar.\nDaha önce oluşturduğumuz arama.txt dosyasını açalım:\nnano arama.txt\nArtık dosya içerisine istediğimiz bilgiyi yazabiliriz. Yazdıklarımız bittikten sonra ctrl + o tuşu ile kaydedebiliriz. Ardından ctrl + x tuş kombinasyonuyla çıkış yapabilirsiniz.\nİsterseniz yeni bir dosya da oluşturabilirsiniz:\nnano yeni-dosya.txt\nDikkat edin, boşluk karakteri kullanmadım. Onun yerine tire - karakterini kullandım"
  },
  {
    "objectID": "01-lectures/01-ynd.html",
    "href": "01-lectures/01-ynd.html",
    "title": "4  Yeni Nesil Dizileme Teknolojileri",
    "section": "",
    "text": "Bu kısımda okunması gereken makaleleri ekiyorum:\n\nGoodwin et al., 2016\nSlatko et al., 2018\nVoelkerding et al., 2009\nDönmez et al., 2015"
  },
  {
    "objectID": "01-lectures/02-fastq-quality-control.html",
    "href": "01-lectures/02-fastq-quality-control.html",
    "title": "5  Fastq kalite kontrol",
    "section": "",
    "text": "ilk olarak fastq dosyalarının kalite kontrolünü işleyeceğiz\nÖncelikle TRUBA sistemimize girelim.\nKendi oluşturduğumuz klasörlere girelim. Siz kendi isminizi yazınız.\ncd emrah\nDaha sonra ders klasörünü kopyalayalım:\ncp -r /truba/home/egitim/Dersler/00-Fastq-Kalite-Kontrol .\nVe klasör içerisine girelim:\ncd 00-Fastq-Kalite-Kontrol\nİçeriğe bakalım:\nls -l\nData klasörü içeriğine bakalım:\nls -l data\nİstersek dosyayı inceleyebiliriz:\nless data/sample1.fastq.gz\nBu dosyanın uzantısı gz. Biyoinformatik alanında kullanılan dosyalar genelde çok yer kapladıkları için sıkıştırılırlar. Bu uzantı da dosyanın sıkıştırıldığını bize söylüyor. Genelde less komutu sıkıştırılmış dosyaları açabilir. Ancak açamadıysa onun yerine zless komutunu deneyebilirsiniz. Bu program özel olarak gz uzantılı dosyaları açmak için tasarlanmıştır.\nŞimdi bu incelediğimiz dosyanın kalite kontrol işlemini gerçekleştireceğiz. Bunun için fastqc programını kullancağız.\nBunun için TRUBA sistemine bir iş betiği göndermemiz gerekli. Bu iş betiği dosyasını inceleyelim:\ncat fastqc_before_trimming.sh\nBu iş betiği dosyası, istediğimiz komutları TRUBA sistemine gönderip çalıştıracak.\nBunun için Barbun isimli bilgisayardan, 4 tane işlemci rezerve ediyoruz ve egitim kullanıcı ismiyle işimizi slurm sistemine gönderityoruz.\nBu iş dosyasını inceleyelim\nBirinci satır genelde zorunlu olarak kullanılması gereken bir satır. Bu aslında dosyanın bash ile çalıştırılması gerektiğini söylüyor:\n#!/bin/bash\n#SBATCH ile başlayan satırlar ise, slurm sisteminde gerekli olan parametreleri belirliyor.\n\n--partition opsiyonu ile kullanacağımız bilgisayarı belirleyebiliriyoruz\n--ntasks-per-node opsyinu ile kaç tane çekirdek kullanmak istediğimizi belirliyoruz\n--user opsiyonu ise kullancı ismimizi belirlememizi sağlıyor. Unutmayıni kullanıcı isminizi mutlaka belirlemeliziniz.\n\nPATH ile başlayan satır ise, kullanılacak programların yolunu belirtiyor.\nArdından ilk olarak mkdir ile çıktı dosyalarımızı yazacağımız klasörü belirliyoruz.\nDaha sonra fastqc programını çalıştırıyoruz.\nÖncelile kullanıcı isminizi nano programı ile düzeltiniz:\nnano fastqc_before_trimming.sh\nİş dosyasını çalıştıralım:\nsbatch fastqc_before_trimming.sh\nGönderdiğimiz işi şu şekilde kontrol edelim:\nsqueue -u egitim\nBunu ara ara takip edelim. İşimiz bittiğinide artık bu ekranda bir bilgi olmayacak.\nİşimiz bittiğinde sonra, çalışma klasörümüzde slurm ile başlayan bir dosya oluşacak. Bu dosyayı, less programı ile kontrol edelim. Bu doya bizim komutlarımızn çıktılarını gösterecek.\nEğer başarılı olduysak results/fastqc_before_trimming klasörü içinde bir kaç dosya oluşacak. Onlara bakalım:\nls -lh results/fastqc_before_trimming\nBu dosyayı bilgisayarımıza indirebiliriz. Önce yeni bir ubuntu ekranı ya da terminal ekranı açalım ve aşağıdaki komutu yazalım:\nscp egitim@levrek1.ulakbim.gov.tr:/truba/home/egitim/emrah/00-Fastq-Kalite-Kontrol/results/fastqc-before-trimming/*html ."
  },
  {
    "objectID": "10-appendices/software-used.html#programların-kurulumu",
    "href": "10-appendices/software-used.html#programların-kurulumu",
    "title": "Appendix A — Kullanılan Programlar",
    "section": "A.1 Programların kurulumu",
    "text": "A.1 Programların kurulumu\nProgramlar genel olarak Conda sistemi ile kurulacaktır."
  },
  {
    "objectID": "10-appendices/software-used.html#fastq-işleme",
    "href": "10-appendices/software-used.html#fastq-işleme",
    "title": "Appendix A — Kullanılan Programlar",
    "section": "A.2 FASTQ işleme",
    "text": "A.2 FASTQ işleme\n\nfastQC\ncutadapt"
  },
  {
    "objectID": "10-appendices/software-used.html#dna-hizalama",
    "href": "10-appendices/software-used.html#dna-hizalama",
    "title": "Appendix A — Kullanılan Programlar",
    "section": "A.3 DNA hizalama",
    "text": "A.3 DNA hizalama\n\nbwa\nsamtools"
  }
]